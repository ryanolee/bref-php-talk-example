service: bref-php-6

provider:
  name: aws
  region: eu-west-1
  iam:
    role:
      statements:
        - Sid: "ListAndDescribe"
          Effect: "Allow"
          Action:
            - dynamodb:List*
            - dynamodb:DescribeReservedCapacity*
            - dynamodb:DescribeLimits
            - dynamodb:DescribeTimeToLive
          Resource: "*"
          
        - Sid: "AllowElephpants"
          Effect: "Allow"
          Action:
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/elephpants-*"

        - Sid: "AllowElephpantsS3"
          Effect: "Allow"
          Action:
          - s3:PutObject
          - s3:GetObject
          - s3:DeleteObject
          - s3:PutObjectAcl
          - s3:ListObjects
          Resource: !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref ElephpantsBucket
              - /*
        
        - Sid: "AllowElephpantsS3List"
          Effect: "Allow"
          Action:
            - s3:ListBucket
          Resource: !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref ElephpantsBucket

plugins:
  - ./vendor/bref/bref
  - ./vendor/bref/extra-php-extensions
  - serverless-lift

functions:
  frontend:
    handler: public/index.php
    description: ""
    timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
    runtime: php-81-fpm
    architecture: arm64
    events:
      - httpApi: "*"
    environment:
      SERVERLESS_STAGE: dev
      ELEPHANTS_BUCKET: !Ref ElephpantsBucket

  console:
    handler: bin/console
    runtime: php-81-console
    architecture: arm64
  
  imageUpload:
    handler: src/Lambda/S3/ImageUploadHandler.php
    runtime: php-81
    layers:
      - ${bref-extra:imagick-php-81}
    events:
      - s3:
          bucket: !Ref ElephpantsBucket
          existing: true
          event: s3:ObjectCreated:*
          rules:
            - prefix: full/


constructs:
  website:
    type: server-side-website
    assets:
      "/assets/*": "public/assets"

resources:
  Resources:
    ElephpantsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: elephpants-6
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: createdAt
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: N
        BillingMode: PAY_PER_REQUEST
    ElephpantsBucket:
        Type: 'AWS::S3::Bucket'
        Properties:
          PublicAccessBlockConfiguration:
            BlockPublicAcls: false
            BlockPublicPolicy: false
            IgnorePublicAcls: false
            RestrictPublicBuckets: false
          OwnershipControls:      
            Rules:
              - ObjectOwnership: BucketOwnerPreferred
          WebsiteConfiguration:
            IndexDocument: index.html
            ErrorDocument: error.html
          CorsConfiguration:
            CorsRules:
              - AllowedOrigins:
                  - '*'
                AllowedHeaders:
                  - '*'
                AllowedMethods:
                  - GET
                  - POST
                MaxAge: 3000
        DeletionPolicy: Retain
    ElephpantsBucketPolicy:
      Type: 'AWS::S3::BucketPolicy'
      Properties:
        PolicyDocument:
          Id: ElephpantBucketPolicy
          Version: "2012-10-17"
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: '*'
              Action: 's3:GetObject'
              Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref ElephpantsBucket
                  - /*
        Bucket: !Ref ElephpantsBucket
# Exclude files from deployment
package:
  patterns:
    - "!node_modules/**"
    - "!tests/**"
